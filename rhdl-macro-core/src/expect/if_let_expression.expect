Block {
    brace_token: Brace,
    stmts: [
        Stmt::Local {
            attrs: [],
            let_token: Let,
            pat: Pat::Ident {
                attrs: [],
                by_ref: None,
                mutability: None,
                ident: Ident {
                    sym: a,
                },
                subpat: None,
            },
            init: Some(
                LocalInit {
                    eq_token: Eq,
                    expr: Expr::Call {
                        attrs: [],
                        func: Expr::Path {
                            attrs: [],
                            qself: None,
                            path: Path {
                                leading_colon: None,
                                segments: [
                                    PathSegment {
                                        ident: Ident {
                                            sym: Some,
                                        },
                                        arguments: PathArguments::None,
                                    },
                                ],
                            },
                        },
                        paren_token: Paren,
                        args: [
                            Expr::Lit {
                                attrs: [],
                                lit: Lit::Int {
                                    token: 43,
                                },
                            },
                        ],
                    },
                    diverge: None,
                },
            ),
            semi_token: Semi,
        },
        Stmt::Expr(
            Expr::If {
                attrs: [],
                if_token: If,
                cond: Expr::Let {
                    attrs: [],
                    let_token: Let,
                    pat: Pat::TupleStruct {
                        attrs: [],
                        qself: None,
                        path: Path {
                            leading_colon: None,
                            segments: [
                                PathSegment {
                                    ident: Ident {
                                        sym: Some,
                                    },
                                    arguments: PathArguments::None,
                                },
                            ],
                        },
                        paren_token: Paren,
                        elems: [
                            Pat::Ident {
                                attrs: [],
                                by_ref: None,
                                mutability: None,
                                ident: Ident {
                                    sym: b,
                                },
                                subpat: None,
                            },
                        ],
                    },
                    eq_token: Eq,
                    expr: Expr::Path {
                        attrs: [],
                        qself: None,
                        path: Path {
                            leading_colon: None,
                            segments: [
                                PathSegment {
                                    ident: Ident {
                                        sym: a,
                                    },
                                    arguments: PathArguments::None,
                                },
                            ],
                        },
                    },
                },
                then_branch: Block {
                    brace_token: Brace,
                    stmts: [
                        Stmt::Expr(
                            Expr::Path {
                                attrs: [],
                                qself: None,
                                path: Path {
                                    leading_colon: None,
                                    segments: [
                                        PathSegment {
                                            ident: Ident {
                                                sym: b,
                                            },
                                            arguments: PathArguments::None,
                                        },
                                    ],
                                },
                            },
                            None,
                        ),
                    ],
                },
                else_branch: Some(
                    (
                        Else,
                        Expr::Block {
                            attrs: [],
                            label: None,
                            block: Block {
                                brace_token: Brace,
                                stmts: [
                                    Stmt::Expr(
                                        Expr::Lit {
                                            attrs: [],
                                            lit: Lit::Int {
                                                token: 0,
                                            },
                                        },
                                        None,
                                    ),
                                ],
                            },
                        },
                    ),
                ),
            },
            None,
        ),
    ],
}
