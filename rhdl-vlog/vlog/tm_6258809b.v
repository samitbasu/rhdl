// Autogenerated testbench for kernel_foo
module testbench();
    wire [31:0] out;
    reg [31:0] arg_0;
    assign out = kernel_foo(arg_0);
    initial begin
        arg_0 = 32'b00000100000000110000001000000001;
        #0;
        if (32'b00000100001010100000001000000001 !== out) begin
            $display("ASSERTION FAILED 0x%0h !== 0x%0h CASE 0", 32'b00000100001010100000001000000001, out);
            $finish;
        end
        $display("TESTBENCH OK", );
        $finish;
    end
    function [31:0] kernel_foo(input reg [31:0] arg_0);
        reg [31:0] or0;
        reg [31:0] or1;  // a
        localparam ol0 = 8'b00101010;
        begin
            or0 = arg_0;
            // let a = a.val();
            //
            // a[1 + 1] = bits(42);
            //
            or1 = or0; or1[23:16] = ol0;
            // signal(a)
            //
            kernel_foo = or1;
        end
    endfunction
endmodule
