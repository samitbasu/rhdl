rhdl :: vlog :: Stmt :: Block ({ let stmt0 = rhdl :: vlog :: Stmt :: If (rhdl :: vlog :: If { condition : Box :: new (rhdl :: vlog :: Expr :: Binary (rhdl :: vlog :: ExprBinary { lhs : Box :: new (rhdl :: vlog :: Expr :: Ident (stringify ! (a) . into ())) , op : rhdl :: vlog :: BinaryOp :: Gt , rhs : Box :: new (rhdl :: vlog :: Expr :: Literal (3)) })) , true_stmt : Box :: new (rhdl :: vlog :: Stmt :: Assign (rhdl :: vlog :: Assign { target : stringify ! (b) . into () , rhs : Box :: new (rhdl :: vlog :: Expr :: Literal (4)) , })) , else_branch : Some (Box :: new (rhdl :: vlog :: Stmt :: Assign (rhdl :: vlog :: Assign { target : stringify ! (c) . into () , rhs : Box :: new (rhdl :: vlog :: Expr :: Ident (stringify ! (b) . into ())) , }))) , }) ; vec ! [stmt0 ,] })