vlog :: case_stmt (vlog :: ident_expr (stringify ! (rega)) , { let elem0 = vlog :: case_line (vlog :: case_item_literal (vlog :: lit_verilog (16 , stringify ! (d0) . into ())) , vlog :: assign_stmt (stringify ! (result) , vlog :: constant_expr (vlog :: lit_verilog (10 , stringify ! (b0111111111))))) ; let elem1 = vlog :: case_line (vlog :: case_item_literal (vlog :: lit_verilog (16 , stringify ! (d1) . into ())) , vlog :: assign_stmt (stringify ! (result) , vlog :: constant_expr (vlog :: lit_verilog (10 , stringify ! (b1011111111))))) ; let elem2 = vlog :: case_line (vlog :: case_item_literal (vlog :: lit_verilog (16 , stringify ! (d2) . into ())) , vlog :: assign_stmt (stringify ! (result) , vlog :: constant_expr (vlog :: lit_verilog (10 , stringify ! (b1101111111))))) ; let elem3 = vlog :: case_line (vlog :: case_item_literal (vlog :: lit_verilog (16 , stringify ! (d3) . into ())) , vlog :: assign_stmt (stringify ! (result) , vlog :: constant_expr (vlog :: lit_verilog (10 , stringify ! (b1110111111))))) ; let elem4 = vlog :: case_line (vlog :: case_item_literal (vlog :: lit_verilog (16 , stringify ! (d4) . into ())) , vlog :: assign_stmt (stringify ! (result) , vlog :: constant_expr (vlog :: lit_verilog (10 , stringify ! (b1111011111))))) ; let elem5 = vlog :: case_line (vlog :: case_item_literal (vlog :: lit_verilog (16 , stringify ! (d5) . into ())) , vlog :: assign_stmt (stringify ! (result) , vlog :: constant_expr (vlog :: lit_verilog (10 , stringify ! (b1111101111))))) ; let elem6 = vlog :: case_line (vlog :: case_item_literal (vlog :: lit_verilog (16 , stringify ! (d6) . into ())) , vlog :: assign_stmt (stringify ! (result) , vlog :: constant_expr (vlog :: lit_verilog (10 , stringify ! (b1111110111))))) ; let elem7 = vlog :: case_line (vlog :: case_item_literal (vlog :: lit_verilog (16 , stringify ! (d7) . into ())) , vlog :: assign_stmt (stringify ! (result) , vlog :: constant_expr (vlog :: lit_verilog (10 , stringify ! (b1111111011))))) ; let elem8 = vlog :: case_line (vlog :: case_item_literal (vlog :: lit_verilog (16 , stringify ! (d8) . into ())) , vlog :: assign_stmt (stringify ! (result) , vlog :: constant_expr (vlog :: lit_verilog (10 , stringify ! (b1111111101))))) ; let elem9 = vlog :: case_line (vlog :: case_item_literal (vlog :: lit_verilog (16 , stringify ! (d9) . into ())) , vlog :: assign_stmt (stringify ! (result) , vlog :: constant_expr (vlog :: lit_verilog (10 , stringify ! (b1111111110))))) ; let elem10 = vlog :: case_line (vlog :: case_item_wild () , vlog :: assign_stmt (stringify ! (result) , vlog :: constant_expr (vlog :: lit_verilog (10 , stringify ! (bx))))) ; vec ! [elem0 , elem1 , elem2 , elem3 , elem4 , elem5 , elem6 , elem7 , elem8 , elem9 , elem10] })