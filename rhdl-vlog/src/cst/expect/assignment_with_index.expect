vlog :: module_def (stringify ! (foo) , { let mut ret = Vec :: with_capacity (3usize) ; ret . push (vlog :: port (vlog :: input () , vlog :: declaration (vlog :: wire () , vlog :: unsigned (0 ..= 7) , stringify ! (a)))) ; ret . push (vlog :: port (vlog :: input () , vlog :: declaration (vlog :: wire () , vlog :: unsigned (0 ..= 7) , stringify ! (b)))) ; ret . push (vlog :: port (vlog :: output () , vlog :: declaration (vlog :: wire () , vlog :: unsigned (0 ..= 7) , stringify ! (c)))) ; ret } , { let mut ret = Vec :: with_capacity (5usize) ; ret . push (vlog :: stmt_item (vlog :: assign_stmt (vlog :: assign_target_ident (stringify ! (c)) , vlog :: binary_expr (vlog :: index_expr (stringify ! (a) , vlog :: literal_expr (3) , None) , vlog :: binary_plus () , vlog :: index_expr (stringify ! (b) , vlog :: literal_expr (5) , Some (vlog :: literal_expr (2))))))) ; ret . push (vlog :: stmt_item (vlog :: nonblock_assign_stmt (vlog :: assign_target_ident (stringify ! (c)) , vlog :: binary_expr (vlog :: index_expr (stringify ! (a) , vlog :: literal_expr (3) , None) , vlog :: binary_plus () , vlog :: index_expr (stringify ! (b) , vlog :: literal_expr (5) , Some (vlog :: literal_expr (2))))))) ; ret . push (vlog :: stmt_item (vlog :: nonblock_assign_stmt (vlog :: assign_target_index (vlog :: index_expr (stringify ! (c) , vlog :: ident_expr (stringify ! (a)) , None)) , vlog :: ident_expr (stringify ! (b))))) ; ret . push (vlog :: stmt_item (vlog :: nonblock_assign_stmt (vlog :: assign_target_index (vlog :: index_expr (stringify ! (c) , vlog :: index_expr (stringify ! (a) , vlog :: literal_expr (3) , Some (vlog :: literal_expr (0))) , None)) , vlog :: ident_expr (stringify ! (b))))) ; ret . push (vlog :: stmt_item (vlog :: nonblock_assign_stmt (vlog :: assign_target_index (vlog :: index_expr (stringify ! (c) , vlog :: literal_expr (3) , Some (vlog :: literal_expr (0)))) , vlog :: ident_expr (stringify ! (a))))) ; ret })