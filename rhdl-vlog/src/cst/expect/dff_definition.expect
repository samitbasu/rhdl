vlog :: module_def (stringify ! (foo) , { let mut ret = Vec :: with_capacity (3usize) ; ret . push (vlog :: port (vlog :: input () , vlog :: declaration (vlog :: wire () , vlog :: unsigned (0 ..= 2) , stringify ! (clock_reset)))) ; ret . push (vlog :: port (vlog :: input () , vlog :: declaration (vlog :: wire () , vlog :: unsigned (0 ..= 7) , stringify ! (i)))) ; ret . push (vlog :: port (vlog :: output () , vlog :: declaration (vlog :: wire () , vlog :: unsigned (0 ..= 7) , stringify ! (o)))) ; ret } , { let mut ret = Vec :: with_capacity (5usize) ; ret . push (vlog :: declaration_item (vlog :: declaration_list (vlog :: wire () , vlog :: unsigned (0 ..= 0) , { let mut ret = Vec :: with_capacity (1usize) ; ret . push (vlog :: decl_kind (stringify ! (clock) , None)) ; ret }))) ; ret . push (vlog :: declaration_item (vlog :: declaration_list (vlog :: wire () , vlog :: unsigned (0 ..= 0) , { let mut ret = Vec :: with_capacity (1usize) ; ret . push (vlog :: decl_kind (stringify ! (reset) , None)) ; ret }))) ; ret . push (vlog :: stmt_item (vlog :: continuous_assign_stmt (vlog :: assign_target_ident (stringify ! (clock)) , vlog :: index_expr (stringify ! (clock_reset) , vlog :: literal_expr (0) , None)))) ; ret . push (vlog :: stmt_item (vlog :: continuous_assign_stmt (vlog :: assign_target_ident (stringify ! (wire)) , vlog :: index_expr (stringify ! (clock_reset) , vlog :: literal_expr (1) , None)))) ; ret . push (vlog :: stmt_item (vlog :: always_stmt ({ let mut ret = Vec :: with_capacity (1usize) ; ret . push (vlog :: pos_edge (stringify ! (clock))) ; ret } , vlog :: block_stmt ({ let mut ret = Vec :: with_capacity (1usize) ; ret . push (vlog :: if_stmt (vlog :: ident_expr (stringify ! (reset)) , vlog :: block_stmt ({ let mut ret = Vec :: with_capacity (1usize) ; ret . push (vlog :: nonblock_assign_stmt (vlog :: assign_target_ident (stringify ! (o)) , vlog :: constant_expr (vlog :: lit_verilog (8 , stringify ! (b0))))) ; ret }) , Some (vlog :: block_stmt ({ let mut ret = Vec :: with_capacity (1usize) ; ret . push (vlog :: nonblock_assign_stmt (vlog :: assign_target_ident (stringify ! (o)) , vlog :: ident_expr (stringify ! (i)))) ; ret })))) ; ret })))) ; ret })