pub mod vlog {
    include!("../src/ast.rs");
}
pub mod formatter {
    include!("../src/formatter.rs");
}
fn main() {
    let _ = vlog::module_list({
        let mut ret = Vec::with_capacity(1usize);
        ret.push(
            vlog::module_def(
                stringify!(bit_ops),
                {
                    let mut ret = Vec::with_capacity(3usize);
                    ret.push(
                        vlog::port(
                            vlog::input(),
                            vlog::declaration(
                                vlog::wire(),
                                vlog::unsigned(0..=7),
                                stringify!(a),
                            ),
                        ),
                    );
                    ret.push(
                        vlog::port(
                            vlog::input(),
                            vlog::declaration(
                                vlog::wire(),
                                vlog::unsigned(0..=7),
                                stringify!(b),
                            ),
                        ),
                    );
                    ret.push(
                        vlog::port(
                            vlog::output(),
                            vlog::declaration(
                                vlog::reg(),
                                vlog::unsigned(0..=15),
                                stringify!(result),
                            ),
                        ),
                    );
                    ret
                },
                {
                    let mut ret = Vec::with_capacity(5usize);
                    ret.push(
                        vlog::declaration_item(
                            vlog::declaration_list(
                                vlog::wire(),
                                vlog::unsigned(0..=7),
                                {
                                    let mut ret = Vec::with_capacity(3usize);
                                    ret.push(vlog::decl_kind(stringify!(temp1), None));
                                    ret.push(vlog::decl_kind(stringify!(temp2), None));
                                    ret.push(vlog::decl_kind(stringify!(temp3), None));
                                    ret
                                },
                            ),
                        ),
                    );
                    ret.push(
                        vlog::stmt_item(
                            vlog::continuous_assign_stmt(
                                vlog::assign_target_ident(stringify!(temp1)),
                                vlog::binary_expr(
                                    vlog::ident_expr(stringify!(a)),
                                    vlog::binary_and(),
                                    vlog::ident_expr(stringify!(b)),
                                ),
                            ),
                        ),
                    );
                    ret.push(
                        vlog::stmt_item(
                            vlog::continuous_assign_stmt(
                                vlog::assign_target_ident(stringify!(temp2)),
                                vlog::binary_expr(
                                    vlog::ident_expr(stringify!(a)),
                                    vlog::binary_or(),
                                    vlog::ident_expr(stringify!(b)),
                                ),
                            ),
                        ),
                    );
                    ret.push(
                        vlog::stmt_item(
                            vlog::continuous_assign_stmt(
                                vlog::assign_target_ident(stringify!(temp3)),
                                vlog::binary_expr(
                                    vlog::ident_expr(stringify!(a)),
                                    vlog::binary_xor(),
                                    vlog::ident_expr(stringify!(b)),
                                ),
                            ),
                        ),
                    );
                    ret.push(
                        vlog::stmt_item(
                            vlog::always_stmt(
                                {
                                    let mut ret = Vec::with_capacity(1usize);
                                    ret.push(vlog::star());
                                    ret
                                },
                                vlog::block_stmt({
                                    let mut ret = Vec::with_capacity(3usize);
                                    ret.push(
                                        vlog::assign_stmt(
                                            vlog::assign_target_index(
                                                vlog::index_expr(
                                                    stringify!(result),
                                                    vlog::literal_expr(15),
                                                    Some(vlog::literal_expr(8)),
                                                ),
                                            ),
                                            vlog::concat_expr({
                                                let mut ret = Vec::with_capacity(2usize);
                                                ret.push(
                                                    vlog::index_expr(
                                                        stringify!(temp1),
                                                        vlog::literal_expr(6),
                                                        Some(vlog::literal_expr(0)),
                                                    ),
                                                );
                                                ret.push(
                                                    vlog::index_expr(
                                                        stringify!(temp2),
                                                        vlog::literal_expr(7),
                                                        None,
                                                    ),
                                                );
                                                ret
                                            }),
                                        ),
                                    );
                                    ret.push(
                                        vlog::assign_stmt(
                                            vlog::assign_target_index(
                                                vlog::index_expr(
                                                    stringify!(result),
                                                    vlog::literal_expr(7),
                                                    Some(vlog::literal_expr(0)),
                                                ),
                                            ),
                                            vlog::binary_expr(
                                                vlog::ident_expr(stringify!(temp3)),
                                                vlog::binary_plus(),
                                                vlog::paren_expr(
                                                    vlog::binary_expr(
                                                        vlog::ident_expr(stringify!(a)),
                                                        vlog::binary_mul(),
                                                        vlog::index_expr(
                                                            stringify!(b),
                                                            vlog::literal_expr(3),
                                                            Some(vlog::literal_expr(0)),
                                                        ),
                                                    ),
                                                ),
                                            ),
                                        ),
                                    );
                                    ret.push(
                                        vlog::if_stmt(
                                            vlog::unary_expr(
                                                vlog::unary_or(),
                                                vlog::ident_expr(stringify!(a)),
                                            ),
                                            vlog::block_stmt({
                                                let mut ret = Vec::with_capacity(1usize);
                                                ret.push(
                                                    vlog::assign_stmt(
                                                        vlog::assign_target_index(
                                                            vlog::index_expr(
                                                                stringify!(result),
                                                                vlog::literal_expr(0),
                                                                None,
                                                            ),
                                                        ),
                                                        vlog::unary_expr(
                                                            vlog::unary_and(),
                                                            vlog::ident_expr(stringify!(b)),
                                                        ),
                                                    ),
                                                );
                                                ret
                                            }),
                                            Some(
                                                vlog::block_stmt({
                                                    let mut ret = Vec::with_capacity(1usize);
                                                    ret.push(
                                                        vlog::assign_stmt(
                                                            vlog::assign_target_index(
                                                                vlog::index_expr(
                                                                    stringify!(result),
                                                                    vlog::literal_expr(0),
                                                                    None,
                                                                ),
                                                            ),
                                                            vlog::unary_expr(
                                                                vlog::unary_xor(),
                                                                vlog::ident_expr(stringify!(b)),
                                                            ),
                                                        ),
                                                    );
                                                    ret
                                                }),
                                            ),
                                        ),
                                    );
                                    ret
                                }),
                            ),
                        ),
                    );
                    ret
                },
            ),
        );
        ret
    });
}
