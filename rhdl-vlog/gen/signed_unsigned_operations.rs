pub mod vlog {
    include!("../src/ast.rs");
}
fn main() {
    let _ = vlog::module_list({
        let mut ret = Vec::with_capacity(1usize);
        ret.push(
            vlog::module_def(
                stringify!(signed_ops),
                {
                    let mut ret = Vec::with_capacity(4usize);
                    ret.push(
                        vlog::port(
                            vlog::input(),
                            vlog::declaration(
                                vlog::wire(),
                                vlog::signed(0..=7),
                                stringify!(signed_data),
                            ),
                        ),
                    );
                    ret.push(
                        vlog::port(
                            vlog::input(),
                            vlog::declaration(
                                vlog::wire(),
                                vlog::unsigned(0..=7),
                                stringify!(unsigned_data),
                            ),
                        ),
                    );
                    ret.push(
                        vlog::port(
                            vlog::output(),
                            vlog::declaration(
                                vlog::reg(),
                                vlog::signed(0..=15),
                                stringify!(signed_result),
                            ),
                        ),
                    );
                    ret.push(
                        vlog::port(
                            vlog::output(),
                            vlog::declaration(
                                vlog::reg(),
                                vlog::unsigned(0..=15),
                                stringify!(unsigned_result),
                            ),
                        ),
                    );
                    ret
                },
                {
                    let mut ret = Vec::with_capacity(5usize);
                    ret.push(
                        vlog::declaration_item(
                            vlog::declaration_list(
                                vlog::wire(),
                                vlog::signed(0..=7),
                                {
                                    let mut ret = Vec::with_capacity(1usize);
                                    ret.push(vlog::decl_kind(stringify!(temp_signed), None));
                                    ret
                                },
                            ),
                        ),
                    );
                    ret.push(
                        vlog::declaration_item(
                            vlog::declaration_list(
                                vlog::wire(),
                                vlog::unsigned(0..=7),
                                {
                                    let mut ret = Vec::with_capacity(1usize);
                                    ret.push(vlog::decl_kind(stringify!(temp_unsigned), None));
                                    ret
                                },
                            ),
                        ),
                    );
                    ret.push(
                        vlog::stmt_item(
                            vlog::continuous_assign_stmt(
                                vlog::assign_target_ident(stringify!(temp_signed)),
                                vlog::binary_expr(
                                    vlog::ident_expr(stringify!(signed_data)),
                                    vlog::binary_signed_right_shift(),
                                    vlog::literal_expr(2),
                                ),
                            ),
                        ),
                    );
                    ret.push(
                        vlog::stmt_item(
                            vlog::continuous_assign_stmt(
                                vlog::assign_target_ident(stringify!(temp_unsigned)),
                                vlog::binary_expr(
                                    vlog::ident_expr(stringify!(unsigned_data)),
                                    vlog::binary_shr(),
                                    vlog::literal_expr(2),
                                ),
                            ),
                        ),
                    );
                    ret.push(
                        vlog::stmt_item(
                            vlog::always_stmt(
                                {
                                    let mut ret = Vec::with_capacity(1usize);
                                    ret.push(vlog::star());
                                    ret
                                },
                                vlog::block_stmt({
                                    let mut ret = Vec::with_capacity(4usize);
                                    ret.push(
                                        vlog::assign_stmt(
                                            vlog::assign_target_ident(stringify!(signed_result)),
                                            vlog::binary_expr(
                                                vlog::ident_expr(stringify!(signed_data)),
                                                vlog::binary_mul(),
                                                vlog::ident_expr(stringify!(temp_signed)),
                                            ),
                                        ),
                                    );
                                    ret.push(
                                        vlog::assign_stmt(
                                            vlog::assign_target_ident(stringify!(unsigned_result)),
                                            vlog::binary_expr(
                                                vlog::ident_expr(stringify!(unsigned_data)),
                                                vlog::binary_mul(),
                                                vlog::ident_expr(stringify!(temp_unsigned)),
                                            ),
                                        ),
                                    );
                                    ret.push(
                                        vlog::if_stmt(
                                            vlog::binary_expr(
                                                vlog::ident_expr(stringify!(signed_data)),
                                                vlog::binary_lt(),
                                                vlog::literal_expr(0),
                                            ),
                                            vlog::block_stmt({
                                                let mut ret = Vec::with_capacity(1usize);
                                                ret.push(
                                                    vlog::assign_stmt(
                                                        vlog::assign_target_ident(stringify!(signed_result)),
                                                        vlog::unary_expr(
                                                            vlog::unary_minus(),
                                                            vlog::ident_expr(stringify!(signed_result)),
                                                        ),
                                                    ),
                                                );
                                                ret
                                            }),
                                            None,
                                        ),
                                    );
                                    ret.push(
                                        vlog::if_stmt(
                                            vlog::index_expr(
                                                stringify!(signed_result),
                                                vlog::literal_expr(15),
                                                None,
                                            ),
                                            vlog::block_stmt({
                                                let mut ret = Vec::with_capacity(1usize);
                                                ret.push(
                                                    vlog::assign_stmt(
                                                        vlog::assign_target_ident(stringify!(unsigned_result)),
                                                        vlog::binary_expr(
                                                            vlog::unary_expr(
                                                                vlog::unary_not(),
                                                                vlog::ident_expr(stringify!(unsigned_result)),
                                                            ),
                                                            vlog::binary_plus(),
                                                            vlog::literal_expr(1),
                                                        ),
                                                    ),
                                                );
                                                ret
                                            }),
                                            None,
                                        ),
                                    );
                                    ret
                                }),
                            ),
                        ),
                    );
                    ret
                },
            ),
        );
        ret
    });
}
