pub mod vlog {
    include!("../src/ast.rs");
}
pub mod formatter {
    include!("../src/formatter.rs");
}
fn main() {
    let _ = vlog::module_list({
        let mut ret = Vec::with_capacity(1usize);
        ret.push(
            vlog::module_def(
                stringify!(dual_port_memory),
                {
                    let mut ret = Vec::with_capacity(9usize);
                    ret.push(
                        vlog::port(
                            vlog::input(),
                            vlog::declaration(
                                vlog::wire(),
                                vlog::unsigned(0..=0),
                                stringify!(clk),
                            ),
                        ),
                    );
                    ret.push(
                        vlog::port(
                            vlog::input(),
                            vlog::declaration(
                                vlog::wire(),
                                vlog::unsigned(0..=3),
                                stringify!(addr_a),
                            ),
                        ),
                    );
                    ret.push(
                        vlog::port(
                            vlog::input(),
                            vlog::declaration(
                                vlog::wire(),
                                vlog::unsigned(0..=3),
                                stringify!(addr_b),
                            ),
                        ),
                    );
                    ret.push(
                        vlog::port(
                            vlog::input(),
                            vlog::declaration(
                                vlog::wire(),
                                vlog::unsigned(0..=15),
                                stringify!(data_in_a),
                            ),
                        ),
                    );
                    ret.push(
                        vlog::port(
                            vlog::input(),
                            vlog::declaration(
                                vlog::wire(),
                                vlog::unsigned(0..=15),
                                stringify!(data_in_b),
                            ),
                        ),
                    );
                    ret.push(
                        vlog::port(
                            vlog::input(),
                            vlog::declaration(
                                vlog::wire(),
                                vlog::unsigned(0..=0),
                                stringify!(we_a),
                            ),
                        ),
                    );
                    ret.push(
                        vlog::port(
                            vlog::input(),
                            vlog::declaration(
                                vlog::wire(),
                                vlog::unsigned(0..=0),
                                stringify!(we_b),
                            ),
                        ),
                    );
                    ret.push(
                        vlog::port(
                            vlog::output(),
                            vlog::declaration(
                                vlog::reg(),
                                vlog::unsigned(0..=15),
                                stringify!(data_out_a),
                            ),
                        ),
                    );
                    ret.push(
                        vlog::port(
                            vlog::output(),
                            vlog::declaration(
                                vlog::reg(),
                                vlog::unsigned(0..=15),
                                stringify!(data_out_b),
                            ),
                        ),
                    );
                    ret
                },
                {
                    let mut ret = Vec::with_capacity(6usize);
                    ret.push(
                        vlog::declaration_item(
                            vlog::declaration_list(
                                vlog::reg(),
                                vlog::unsigned(0..=15),
                                {
                                    let mut ret = Vec::with_capacity(1usize);
                                    ret.push(
                                        vlog::decl_kind(
                                            stringify!(mem_bank_0),
                                            Some(vlog::unsigned(15..=0)),
                                        ),
                                    );
                                    ret
                                },
                            ),
                        ),
                    );
                    ret.push(
                        vlog::declaration_item(
                            vlog::declaration_list(
                                vlog::reg(),
                                vlog::unsigned(0..=15),
                                {
                                    let mut ret = Vec::with_capacity(1usize);
                                    ret.push(
                                        vlog::decl_kind(
                                            stringify!(mem_bank_1),
                                            Some(vlog::unsigned(15..=0)),
                                        ),
                                    );
                                    ret
                                },
                            ),
                        ),
                    );
                    ret.push(
                        vlog::declaration_item(
                            vlog::declaration_list(
                                vlog::wire(),
                                vlog::unsigned(0..=0),
                                {
                                    let mut ret = Vec::with_capacity(2usize);
                                    ret.push(vlog::decl_kind(stringify!(bank_sel_a), None));
                                    ret.push(vlog::decl_kind(stringify!(bank_sel_b), None));
                                    ret
                                },
                            ),
                        ),
                    );
                    ret.push(
                        vlog::stmt_item(
                            vlog::continuous_assign_stmt(
                                vlog::assign_target_ident(stringify!(bank_sel_a)),
                                vlog::index_expr(
                                    stringify!(addr_a),
                                    vlog::literal_expr(3),
                                    None,
                                ),
                            ),
                        ),
                    );
                    ret.push(
                        vlog::stmt_item(
                            vlog::continuous_assign_stmt(
                                vlog::assign_target_ident(stringify!(bank_sel_b)),
                                vlog::index_expr(
                                    stringify!(addr_b),
                                    vlog::literal_expr(3),
                                    None,
                                ),
                            ),
                        ),
                    );
                    ret.push(
                        vlog::stmt_item(
                            vlog::always_stmt(
                                {
                                    let mut ret = Vec::with_capacity(1usize);
                                    ret.push(vlog::pos_edge(stringify!(clk)));
                                    ret
                                },
                                vlog::block_stmt({
                                    let mut ret = Vec::with_capacity(4usize);
                                    ret.push(
                                        vlog::if_stmt(
                                            vlog::ident_expr(stringify!(we_a)),
                                            vlog::block_stmt({
                                                let mut ret = Vec::with_capacity(1usize);
                                                ret.push(
                                                    vlog::if_stmt(
                                                        vlog::ident_expr(stringify!(bank_sel_a)),
                                                        vlog::block_stmt({
                                                            let mut ret = Vec::with_capacity(1usize);
                                                            ret.push(
                                                                vlog::nonblock_assign_stmt(
                                                                    vlog::assign_target_index(
                                                                        vlog::index_expr(
                                                                            stringify!(mem_bank_1),
                                                                            vlog::index_expr(
                                                                                stringify!(addr_a),
                                                                                vlog::literal_expr(2),
                                                                                Some(vlog::literal_expr(0)),
                                                                            ),
                                                                            None,
                                                                        ),
                                                                    ),
                                                                    vlog::ident_expr(stringify!(data_in_a)),
                                                                ),
                                                            );
                                                            ret
                                                        }),
                                                        Some(
                                                            vlog::block_stmt({
                                                                let mut ret = Vec::with_capacity(1usize);
                                                                ret.push(
                                                                    vlog::nonblock_assign_stmt(
                                                                        vlog::assign_target_index(
                                                                            vlog::index_expr(
                                                                                stringify!(mem_bank_0),
                                                                                vlog::index_expr(
                                                                                    stringify!(addr_a),
                                                                                    vlog::literal_expr(2),
                                                                                    Some(vlog::literal_expr(0)),
                                                                                ),
                                                                                None,
                                                                            ),
                                                                        ),
                                                                        vlog::ident_expr(stringify!(data_in_a)),
                                                                    ),
                                                                );
                                                                ret
                                                            }),
                                                        ),
                                                    ),
                                                );
                                                ret
                                            }),
                                            None,
                                        ),
                                    );
                                    ret.push(
                                        vlog::if_stmt(
                                            vlog::ident_expr(stringify!(we_b)),
                                            vlog::block_stmt({
                                                let mut ret = Vec::with_capacity(1usize);
                                                ret.push(
                                                    vlog::if_stmt(
                                                        vlog::ident_expr(stringify!(bank_sel_b)),
                                                        vlog::block_stmt({
                                                            let mut ret = Vec::with_capacity(1usize);
                                                            ret.push(
                                                                vlog::nonblock_assign_stmt(
                                                                    vlog::assign_target_index(
                                                                        vlog::index_expr(
                                                                            stringify!(mem_bank_1),
                                                                            vlog::index_expr(
                                                                                stringify!(addr_b),
                                                                                vlog::literal_expr(2),
                                                                                Some(vlog::literal_expr(0)),
                                                                            ),
                                                                            None,
                                                                        ),
                                                                    ),
                                                                    vlog::ident_expr(stringify!(data_in_b)),
                                                                ),
                                                            );
                                                            ret
                                                        }),
                                                        Some(
                                                            vlog::block_stmt({
                                                                let mut ret = Vec::with_capacity(1usize);
                                                                ret.push(
                                                                    vlog::nonblock_assign_stmt(
                                                                        vlog::assign_target_index(
                                                                            vlog::index_expr(
                                                                                stringify!(mem_bank_0),
                                                                                vlog::index_expr(
                                                                                    stringify!(addr_b),
                                                                                    vlog::literal_expr(2),
                                                                                    Some(vlog::literal_expr(0)),
                                                                                ),
                                                                                None,
                                                                            ),
                                                                        ),
                                                                        vlog::ident_expr(stringify!(data_in_b)),
                                                                    ),
                                                                );
                                                                ret
                                                            }),
                                                        ),
                                                    ),
                                                );
                                                ret
                                            }),
                                            None,
                                        ),
                                    );
                                    ret.push(
                                        vlog::nonblock_assign_stmt(
                                            vlog::assign_target_ident(stringify!(data_out_a)),
                                            vlog::ternary_expr(
                                                vlog::ident_expr(stringify!(bank_sel_a)),
                                                vlog::index_expr(
                                                    stringify!(mem_bank_1),
                                                    vlog::index_expr(
                                                        stringify!(addr_a),
                                                        vlog::literal_expr(2),
                                                        Some(vlog::literal_expr(0)),
                                                    ),
                                                    None,
                                                ),
                                                vlog::index_expr(
                                                    stringify!(mem_bank_0),
                                                    vlog::index_expr(
                                                        stringify!(addr_a),
                                                        vlog::literal_expr(2),
                                                        Some(vlog::literal_expr(0)),
                                                    ),
                                                    None,
                                                ),
                                            ),
                                        ),
                                    );
                                    ret.push(
                                        vlog::nonblock_assign_stmt(
                                            vlog::assign_target_ident(stringify!(data_out_b)),
                                            vlog::ternary_expr(
                                                vlog::ident_expr(stringify!(bank_sel_b)),
                                                vlog::index_expr(
                                                    stringify!(mem_bank_1),
                                                    vlog::index_expr(
                                                        stringify!(addr_b),
                                                        vlog::literal_expr(2),
                                                        Some(vlog::literal_expr(0)),
                                                    ),
                                                    None,
                                                ),
                                                vlog::index_expr(
                                                    stringify!(mem_bank_0),
                                                    vlog::index_expr(
                                                        stringify!(addr_b),
                                                        vlog::literal_expr(2),
                                                        Some(vlog::literal_expr(0)),
                                                    ),
                                                    None,
                                                ),
                                            ),
                                        ),
                                    );
                                    ret
                                }),
                            ),
                        ),
                    );
                    ret
                },
            ),
        );
        ret
    });
}
