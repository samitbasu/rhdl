[{"Start":{"CodeBlock":{"Fenced":"rust"}}},{"Text":"use rhdl::prelude::*;\n\n#[derive(Circuit, Clone)]\nstruct XorGate;\n\nimpl CircuitDQ for XorGate {\n    type D = ();\n    type Q = ();\n}\n\nimpl CircuitIO for XorGate {\n    type I = Signal<(bool, bool), Red>;\n    type O = Signal<bool, Red>;\n    type Kernel = xor_gate;\n}\n\n#[kernel]\npub fn xor_gate(i: Signal<(bool, bool), Red>, _q: ()) -> (Signal<bool, Red>, ()) {\n    let (a, b) = i.val();\n    let c = a ^ b;\n    (signal(c), ())\n}"},{"End":"CodeBlock"}]