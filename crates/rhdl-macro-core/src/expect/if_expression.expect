fn jnk() -> Vec<Stmt> {
    bob.block_expr(
        0u32.into(),
        bob
            .block(
                1u32.into(),
                vec![
                    bob.local_stmt(4u32.into(), bob.ident_pat(2u32.into(), stringify!(d),
                    false), Some(bob.lit_expr(3u32.into(), bob
                    .expr_lit_int(stringify!(4))))), bob.expr_stmt(5u32.into(), bob
                    .if_expr(6u32.into(), bob.binary_expr(7u32.into(),
                    rhdl::core::ast::builder::BinOp::Gt, bob.path_expr(8u32.into(), bob
                    .path(vec![bob.path_segment(stringify!(d), bob
                    .path_arguments_none())],)), bob.lit_expr(9u32.into(), bob
                    .expr_lit_int(stringify!(0)))), bob.block(10u32.into(), vec![bob
                    .semi_stmt(11u32.into(), bob.assign_expr(12u32.into(), bob
                    .path_expr(13u32.into(), bob.path(vec![bob
                    .path_segment(stringify!(d), bob.path_arguments_none())],)), bob
                    .binary_expr(14u32.into(), rhdl::core::ast::builder::BinOp::Sub, bob
                    .path_expr(15u32.into(), bob.path(vec![bob
                    .path_segment(stringify!(d), bob.path_arguments_none())],)), bob
                    .lit_expr(16u32.into(), bob.expr_lit_int(stringify!(1))))))],),
                    None))
                ],
            ),
    )
}
