// Autogenerated testbench for kernel_do_stuff
module testbench();
    wire [7:0] out;
    reg [0:0] arg_0;
    assign out = kernel_do_stuff(arg_0);
    initial begin
        arg_0 = 1'b0;
        #0;
        if (8'b00000100 !== out) begin
            $display("ASSERTION FAILED 0x%0h !== 0x%0h CASE 0", 8'b00000100, out);
            $finish;
        end
        arg_0 = 1'b1;
        #0;
        if (8'b00000010 !== out) begin
            $display("ASSERTION FAILED 0x%0h !== 0x%0h CASE 1", 8'b00000010, out);
            $finish;
        end
        $display("TESTBENCH OK", );
        $finish;
    end
    function [7:0] kernel_do_stuff(input reg [0:0] arg_0);
        reg [0:0] or0;
        reg [0:0] or1;
        reg [7:0] or2;  // c
        localparam ol0 = 8'b00000010;
        localparam ol1 = 8'b00000100;
        begin
            or0 = arg_0;
            // let c: b6 = bits(0);
            //
            // let _d = c;
            //
            // let c = bits(0);
            //
            // if a.val().any() {
            //    c = bits(2);
            // }
            //  else {
            //    c = bits(4);
            // }
            //
            //
            or1 = |(or0);
            // c = bits(2);
            //
            // c = bits(4);
            //
            or2 = (or1) ? (ol0) : (ol1);
            // let _y = c;
            //
            // signal(c)
            //
            kernel_do_stuff = or2;
        end
    endfunction
endmodule
