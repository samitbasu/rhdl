// Autogenerated testbench for kernel_foo
module testbench();
    wire [31:0] out;
    reg [31:0] arg_0;
    assign out = kernel_foo(arg_0);
    initial begin
        arg_0 = 32'b00000100000000110000001000000001;
        #0;
        if (32'b00000001000000010000000100000001 !== out) begin
            $display("ASSERTION FAILED 0x%0h !== 0x%0h CASE 0", 32'b00000001000000010000000100000001, out);
            $finish;
        end
        $display("TESTBENCH OK", );
        $finish;
    end
    function [31:0] kernel_foo(input reg [31:0] arg_0);
        reg [31:0] or0;
        reg [7:0] or1;
        reg [31:0] or2;
        begin
            or0 = arg_0;
            // let a = a.val();
            //
            // let _g = [a[1]; 5];
            //
            // let c = [a[0]; 4];
            //
            or1 = or0[7:0];
            or2 = { or1, or1, or1, or1 };
            // signal(c)
            //
            kernel_foo = or2;
        end
    endfunction
endmodule
