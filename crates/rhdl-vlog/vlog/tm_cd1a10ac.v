// Autogenerated testbench for dut
module testbench();
    wire [7:0] out;
    reg [0:0] arg_0;
    dut t (.out(out),.arg_0(arg_0));
    initial begin
        arg_0 = 1'b0;
        #0;
        if (8'b00000111 !== out) begin
            $display("ASSERTION FAILED 0x%0h !== 0x%0h CASE 0", 8'b00000111, out);
            $finish;
        end
        arg_0 = 1'b1;
        #0;
        if (8'b00000011 !== out) begin
            $display("ASSERTION FAILED 0x%0h !== 0x%0h CASE 1", 8'b00000011, out);
            $finish;
        end
        $display("TESTBENCH OK", );
        $finish;
    end
endmodule
//
module dut(input wire [0:0] arg_0, output reg [7:0] out);
    reg [0:0] r1;
    reg [0:0] r4;
    always @(*) begin
        r1 = arg_0[0];
        // let a = a.val();
        //
        // let j = if a.any() {
        //    3
        // }
        //  else {
        //    7
        // }
        // ;
        //
        // 3
        //
        // 7
        //
        // signal(bits(j))
        //
        r4 = ~(r1);
        out = { 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, r4, 1'b1, 1'b1 };
    end
endmodule
