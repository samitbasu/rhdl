// Autogenerated testbench for kernel_do_stuff
module testbench();
    wire [7:0] out;
    reg [0:0] arg_0;
    assign out = kernel_do_stuff(arg_0);
    initial begin
        arg_0 = 1'b0;
        #0;
        if (8'sb00000010 !== out) begin
            $display("ASSERTION FAILED 0x%0h !== 0x%0h CASE 0", 8'sb00000010, out);
            $finish;
        end
        arg_0 = 1'b1;
        #0;
        if (8'sb00000011 !== out) begin
            $display("ASSERTION FAILED 0x%0h !== 0x%0h CASE 1", 8'sb00000011, out);
            $finish;
        end
        $display("TESTBENCH OK", );
        $finish;
    end
    function signed [7:0] kernel_do_stuff(input reg [0:0] arg_0);
        reg [0:0] or0;
        reg signed [7:0] or1;  // c
        localparam ol0 = 1'b0;
        localparam ol1 = 8'sb00000010;
        localparam ol2 = 1'b1;
        localparam ol3 = 8'sb00000011;
        localparam ol4 = 8'sb00000000;
        begin
            or0 = arg_0;
            // let c = signed(0);
            //
            // match a.val().raw() {
            //    const 0 => c = signed(2),
            //    const 1 => c = signed(3),
            //    _ => {
            //    }
            //    ,
            // }
            //
            case (or0)
                1'b0: or1 = ol1;
                1'b1: or1 = ol3;
                default: or1 = ol4;
            endcase
            // signal(c)
            //
            kernel_do_stuff = or1;
        end
    endfunction
endmodule
