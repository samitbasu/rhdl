// Autogenerated testbench for dut
module testbench();
    wire [63:0] out;
    reg [63:0] arg_0;
    reg [2:0] arg_1;
    dut t (.out(out),.arg_0(arg_0),.arg_1(arg_1));
    initial begin
        arg_0 = 64'b0110110001101011011010100110100101101000011001110110011001100101;
        arg_1 = 3'b000;
        #0;
        if (64'b0110110001101011011010100110100101101000011001110110011000001100 !== out) begin
            $display("ASSERTION FAILED 0x%0h !== 0x%0h CASE 0", 64'b0110110001101011011010100110100101101000011001110110011000001100, out);
            $finish;
        end
        arg_0 = 64'b0110110001101011011010100110100101101000011001110110011001100101;
        arg_1 = 3'b001;
        #0;
        if (64'b0110110001101011011010100110100101101000011001110010101000001100 !== out) begin
            $display("ASSERTION FAILED 0x%0h !== 0x%0h CASE 1", 64'b0110110001101011011010100110100101101000011001110010101000001100, out);
            $finish;
        end
        arg_0 = 64'b0110110001101011011010100110100101101000011001110110011001100101;
        arg_1 = 3'b010;
        #0;
        if (64'b0110110001101011011010100110100101101000001010100110011000001100 !== out) begin
            $display("ASSERTION FAILED 0x%0h !== 0x%0h CASE 2", 64'b0110110001101011011010100110100101101000001010100110011000001100, out);
            $finish;
        end
        arg_0 = 64'b0110110001101011011010100110100101101000011001110110011001100101;
        arg_1 = 3'b011;
        #0;
        if (64'b0110110001101011011010100110100100101010011001110110011000001100 !== out) begin
            $display("ASSERTION FAILED 0x%0h !== 0x%0h CASE 3", 64'b0110110001101011011010100110100100101010011001110110011000001100, out);
            $finish;
        end
        arg_0 = 64'b0110110001101011011010100110100101101000011001110110011001100101;
        arg_1 = 3'b100;
        #0;
        if (64'b0110110001101011011010100010101001101000011001110110011000001100 !== out) begin
            $display("ASSERTION FAILED 0x%0h !== 0x%0h CASE 4", 64'b0110110001101011011010100010101001101000011001110110011000001100, out);
            $finish;
        end
        arg_0 = 64'b0110110001101011011010100110100101101000011001110110011001100101;
        arg_1 = 3'b101;
        #0;
        if (64'b0110110001101011001010100110100101101000011001110110011000001100 !== out) begin
            $display("ASSERTION FAILED 0x%0h !== 0x%0h CASE 5", 64'b0110110001101011001010100110100101101000011001110110011000001100, out);
            $finish;
        end
        arg_0 = 64'b0110110001101011011010100110100101101000011001110110011001100101;
        arg_1 = 3'b110;
        #0;
        if (64'b0110110000101010011010100110100101101000011001110110011000001100 !== out) begin
            $display("ASSERTION FAILED 0x%0h !== 0x%0h CASE 6", 64'b0110110000101010011010100110100101101000011001110110011000001100, out);
            $finish;
        end
        arg_0 = 64'b0110110001101011011010100110100101101000011001110110011001100101;
        arg_1 = 3'b111;
        #0;
        if (64'b0010101001101011011010100110100101101000011001110110011000001100 !== out) begin
            $display("ASSERTION FAILED 0x%0h !== 0x%0h CASE 7", 64'b0010101001101011011010100110100101101000011001110110011000001100, out);
            $finish;
        end
        $display("TESTBENCH OK", );
        $finish;
    end
endmodule
//
module dut(input wire [63:0] arg_0, input wire [2:0] arg_1, output reg [63:0] out);
    reg [0:0] r64;
    reg [0:0] r65;
    reg [0:0] r66;
    reg [0:0] r67;
    reg [0:0] r68;
    reg [0:0] r69;
    reg [0:0] r70;
    reg [0:0] r71;
    reg [0:0] r72;
    reg [0:0] r73;
    reg [0:0] r74;
    reg [0:0] r75;
    reg [0:0] r76;
    reg [0:0] r77;
    reg [0:0] r78;
    reg [0:0] r79;
    reg [0:0] r80;
    reg [0:0] r81;
    reg [0:0] r82;
    reg [0:0] r83;
    reg [0:0] r84;
    reg [0:0] r85;
    reg [0:0] r86;
    reg [0:0] r87;
    reg [0:0] r88;
    reg [0:0] r89;
    reg [0:0] r90;
    reg [0:0] r91;
    reg [0:0] r92;
    reg [0:0] r93;
    reg [0:0] r94;
    reg [0:0] r95;
    reg [0:0] r96;
    reg [0:0] r97;
    reg [0:0] r98;
    reg [0:0] r99;
    reg [0:0] r100;
    reg [0:0] r101;
    reg [0:0] r102;
    reg [0:0] r103;
    reg [0:0] r104;
    reg [0:0] r105;
    reg [0:0] r106;
    reg [0:0] r107;
    reg [0:0] r108;
    reg [0:0] r109;
    reg [0:0] r110;
    reg [0:0] r111;
    reg [0:0] r112;
    reg [0:0] r113;
    reg [0:0] r114;
    reg [0:0] r115;
    reg [0:0] r116;
    reg [0:0] r117;
    reg [0:0] r118;
    reg [0:0] r119;
    reg [0:0] r120;
    reg [0:0] r121;
    reg [0:0] r122;
    reg [0:0] r123;
    reg [0:0] r124;
    reg [0:0] r125;
    reg [0:0] r126;
    reg [0:0] r127;
    reg [0:0] r584;
    reg [0:0] r585;
    reg [0:0] r586;
    reg [0:0] r587;
    reg [0:0] r588;
    reg [0:0] r589;
    reg [0:0] r590;
    reg [0:0] r591;
    reg [0:0] r592;
    reg [0:0] r593;
    reg [0:0] r594;
    reg [0:0] r595;
    reg [0:0] r596;
    reg [0:0] r597;
    reg [0:0] r598;
    reg [0:0] r599;
    reg [0:0] r600;
    reg [0:0] r601;
    reg [0:0] r602;
    reg [0:0] r603;
    reg [0:0] r604;
    reg [0:0] r605;
    reg [0:0] r606;
    reg [0:0] r607;
    reg [0:0] r608;
    reg [0:0] r609;
    reg [0:0] r610;
    reg [0:0] r611;
    reg [0:0] r612;
    reg [0:0] r613;
    reg [0:0] r614;
    reg [0:0] r615;
    reg [0:0] r616;
    reg [0:0] r617;
    reg [0:0] r618;
    reg [0:0] r619;
    reg [0:0] r620;
    reg [0:0] r621;
    reg [0:0] r622;
    reg [0:0] r623;
    reg [0:0] r624;
    reg [0:0] r625;
    reg [0:0] r626;
    reg [0:0] r627;
    reg [0:0] r628;
    reg [0:0] r629;
    reg [0:0] r630;
    reg [0:0] r631;
    reg [0:0] r632;
    reg [0:0] r633;
    reg [0:0] r634;
    reg [0:0] r635;
    reg [0:0] r636;
    reg [0:0] r637;
    reg [0:0] r638;
    reg [0:0] r639;
    reg [0:0] r640;
    reg [0:0] r641;
    reg [0:0] r642;
    always @(*) begin
        r64 = arg_0[0];
        r65 = arg_0[1];
        r66 = arg_0[2];
        r67 = arg_0[3];
        r68 = arg_0[4];
        r69 = arg_0[5];
        r70 = arg_0[6];
        r71 = arg_0[7];
        r72 = arg_0[8];
        r73 = arg_0[9];
        r74 = arg_0[10];
        r75 = arg_0[11];
        r76 = arg_0[12];
        r77 = arg_0[13];
        r78 = arg_0[14];
        r79 = arg_0[15];
        r80 = arg_0[16];
        r81 = arg_0[17];
        r82 = arg_0[18];
        r83 = arg_0[19];
        r84 = arg_0[20];
        r85 = arg_0[21];
        r86 = arg_0[22];
        r87 = arg_0[23];
        r88 = arg_0[24];
        r89 = arg_0[25];
        r90 = arg_0[26];
        r91 = arg_0[27];
        r92 = arg_0[28];
        r93 = arg_0[29];
        r94 = arg_0[30];
        r95 = arg_0[31];
        r96 = arg_0[32];
        r97 = arg_0[33];
        r98 = arg_0[34];
        r99 = arg_0[35];
        r100 = arg_0[36];
        r101 = arg_0[37];
        r102 = arg_0[38];
        r103 = arg_0[39];
        r104 = arg_0[40];
        r105 = arg_0[41];
        r106 = arg_0[42];
        r107 = arg_0[43];
        r108 = arg_0[44];
        r109 = arg_0[45];
        r110 = arg_0[46];
        r111 = arg_0[47];
        r112 = arg_0[48];
        r113 = arg_0[49];
        r114 = arg_0[50];
        r115 = arg_0[51];
        r116 = arg_0[52];
        r117 = arg_0[53];
        r118 = arg_0[54];
        r119 = arg_0[55];
        r120 = arg_0[56];
        r121 = arg_0[57];
        r122 = arg_0[58];
        r123 = arg_0[59];
        r124 = arg_0[60];
        r125 = arg_0[61];
        r126 = arg_0[62];
        r127 = arg_0[63];
        r640 = arg_1[0];
        r641 = arg_1[1];
        r642 = arg_1[2];
        // let b = b.val();
        //
        // let c = a.val();
        //
        // c[b] = bits(42);
        //
        // c[0] = bits(12);
        //
        // signal(c)
        //
        case ({ r642, r641, r640 })
            3'b000: r584 = r72;
            3'b001: r584 = 1'b0;
            3'b010: r584 = r72;
            3'b011: r584 = r72;
            3'b100: r584 = r72;
            3'b101: r584 = r72;
            3'b110: r584 = r72;
            3'b111: r584 = r72;
        endcase
        case ({ r642, r641, r640 })
            3'b000: r585 = r73;
            3'b001: r585 = 1'b1;
            3'b010: r585 = r73;
            3'b011: r585 = r73;
            3'b100: r585 = r73;
            3'b101: r585 = r73;
            3'b110: r585 = r73;
            3'b111: r585 = r73;
        endcase
        case ({ r642, r641, r640 })
            3'b000: r586 = r74;
            3'b001: r586 = 1'b0;
            3'b010: r586 = r74;
            3'b011: r586 = r74;
            3'b100: r586 = r74;
            3'b101: r586 = r74;
            3'b110: r586 = r74;
            3'b111: r586 = r74;
        endcase
        case ({ r642, r641, r640 })
            3'b000: r587 = r75;
            3'b001: r587 = 1'b1;
            3'b010: r587 = r75;
            3'b011: r587 = r75;
            3'b100: r587 = r75;
            3'b101: r587 = r75;
            3'b110: r587 = r75;
            3'b111: r587 = r75;
        endcase
        case ({ r642, r641, r640 })
            3'b000: r588 = r76;
            3'b001: r588 = 1'b0;
            3'b010: r588 = r76;
            3'b011: r588 = r76;
            3'b100: r588 = r76;
            3'b101: r588 = r76;
            3'b110: r588 = r76;
            3'b111: r588 = r76;
        endcase
        case ({ r642, r641, r640 })
            3'b000: r589 = r77;
            3'b001: r589 = 1'b1;
            3'b010: r589 = r77;
            3'b011: r589 = r77;
            3'b100: r589 = r77;
            3'b101: r589 = r77;
            3'b110: r589 = r77;
            3'b111: r589 = r77;
        endcase
        case ({ r642, r641, r640 })
            3'b000: r590 = r78;
            3'b001: r590 = 1'b0;
            3'b010: r590 = r78;
            3'b011: r590 = r78;
            3'b100: r590 = r78;
            3'b101: r590 = r78;
            3'b110: r590 = r78;
            3'b111: r590 = r78;
        endcase
        case ({ r642, r641, r640 })
            3'b000: r591 = r79;
            3'b001: r591 = 1'b0;
            3'b010: r591 = r79;
            3'b011: r591 = r79;
            3'b100: r591 = r79;
            3'b101: r591 = r79;
            3'b110: r591 = r79;
            3'b111: r591 = r79;
        endcase
        case ({ r642, r641, r640 })
            3'b000: r592 = r80;
            3'b001: r592 = r80;
            3'b010: r592 = 1'b0;
            3'b011: r592 = r80;
            3'b100: r592 = r80;
            3'b101: r592 = r80;
            3'b110: r592 = r80;
            3'b111: r592 = r80;
        endcase
        case ({ r642, r641, r640 })
            3'b000: r593 = r81;
            3'b001: r593 = r81;
            3'b010: r593 = 1'b1;
            3'b011: r593 = r81;
            3'b100: r593 = r81;
            3'b101: r593 = r81;
            3'b110: r593 = r81;
            3'b111: r593 = r81;
        endcase
        case ({ r642, r641, r640 })
            3'b000: r594 = r82;
            3'b001: r594 = r82;
            3'b010: r594 = 1'b0;
            3'b011: r594 = r82;
            3'b100: r594 = r82;
            3'b101: r594 = r82;
            3'b110: r594 = r82;
            3'b111: r594 = r82;
        endcase
        case ({ r642, r641, r640 })
            3'b000: r595 = r83;
            3'b001: r595 = r83;
            3'b010: r595 = 1'b1;
            3'b011: r595 = r83;
            3'b100: r595 = r83;
            3'b101: r595 = r83;
            3'b110: r595 = r83;
            3'b111: r595 = r83;
        endcase
        case ({ r642, r641, r640 })
            3'b000: r596 = r84;
            3'b001: r596 = r84;
            3'b010: r596 = 1'b0;
            3'b011: r596 = r84;
            3'b100: r596 = r84;
            3'b101: r596 = r84;
            3'b110: r596 = r84;
            3'b111: r596 = r84;
        endcase
        case ({ r642, r641, r640 })
            3'b000: r597 = r85;
            3'b001: r597 = r85;
            3'b010: r597 = 1'b1;
            3'b011: r597 = r85;
            3'b100: r597 = r85;
            3'b101: r597 = r85;
            3'b110: r597 = r85;
            3'b111: r597 = r85;
        endcase
        case ({ r642, r641, r640 })
            3'b000: r598 = r86;
            3'b001: r598 = r86;
            3'b010: r598 = 1'b0;
            3'b011: r598 = r86;
            3'b100: r598 = r86;
            3'b101: r598 = r86;
            3'b110: r598 = r86;
            3'b111: r598 = r86;
        endcase
        case ({ r642, r641, r640 })
            3'b000: r599 = r87;
            3'b001: r599 = r87;
            3'b010: r599 = 1'b0;
            3'b011: r599 = r87;
            3'b100: r599 = r87;
            3'b101: r599 = r87;
            3'b110: r599 = r87;
            3'b111: r599 = r87;
        endcase
        case ({ r642, r641, r640 })
            3'b000: r600 = r88;
            3'b001: r600 = r88;
            3'b010: r600 = r88;
            3'b011: r600 = 1'b0;
            3'b100: r600 = r88;
            3'b101: r600 = r88;
            3'b110: r600 = r88;
            3'b111: r600 = r88;
        endcase
        case ({ r642, r641, r640 })
            3'b000: r601 = r89;
            3'b001: r601 = r89;
            3'b010: r601 = r89;
            3'b011: r601 = 1'b1;
            3'b100: r601 = r89;
            3'b101: r601 = r89;
            3'b110: r601 = r89;
            3'b111: r601 = r89;
        endcase
        case ({ r642, r641, r640 })
            3'b000: r602 = r90;
            3'b001: r602 = r90;
            3'b010: r602 = r90;
            3'b011: r602 = 1'b0;
            3'b100: r602 = r90;
            3'b101: r602 = r90;
            3'b110: r602 = r90;
            3'b111: r602 = r90;
        endcase
        case ({ r642, r641, r640 })
            3'b000: r603 = r91;
            3'b001: r603 = r91;
            3'b010: r603 = r91;
            3'b011: r603 = 1'b1;
            3'b100: r603 = r91;
            3'b101: r603 = r91;
            3'b110: r603 = r91;
            3'b111: r603 = r91;
        endcase
        case ({ r642, r641, r640 })
            3'b000: r604 = r92;
            3'b001: r604 = r92;
            3'b010: r604 = r92;
            3'b011: r604 = 1'b0;
            3'b100: r604 = r92;
            3'b101: r604 = r92;
            3'b110: r604 = r92;
            3'b111: r604 = r92;
        endcase
        case ({ r642, r641, r640 })
            3'b000: r605 = r93;
            3'b001: r605 = r93;
            3'b010: r605 = r93;
            3'b011: r605 = 1'b1;
            3'b100: r605 = r93;
            3'b101: r605 = r93;
            3'b110: r605 = r93;
            3'b111: r605 = r93;
        endcase
        case ({ r642, r641, r640 })
            3'b000: r606 = r94;
            3'b001: r606 = r94;
            3'b010: r606 = r94;
            3'b011: r606 = 1'b0;
            3'b100: r606 = r94;
            3'b101: r606 = r94;
            3'b110: r606 = r94;
            3'b111: r606 = r94;
        endcase
        case ({ r642, r641, r640 })
            3'b000: r607 = r95;
            3'b001: r607 = r95;
            3'b010: r607 = r95;
            3'b011: r607 = 1'b0;
            3'b100: r607 = r95;
            3'b101: r607 = r95;
            3'b110: r607 = r95;
            3'b111: r607 = r95;
        endcase
        case ({ r642, r641, r640 })
            3'b000: r608 = r96;
            3'b001: r608 = r96;
            3'b010: r608 = r96;
            3'b011: r608 = r96;
            3'b100: r608 = 1'b0;
            3'b101: r608 = r96;
            3'b110: r608 = r96;
            3'b111: r608 = r96;
        endcase
        case ({ r642, r641, r640 })
            3'b000: r609 = r97;
            3'b001: r609 = r97;
            3'b010: r609 = r97;
            3'b011: r609 = r97;
            3'b100: r609 = 1'b1;
            3'b101: r609 = r97;
            3'b110: r609 = r97;
            3'b111: r609 = r97;
        endcase
        case ({ r642, r641, r640 })
            3'b000: r610 = r98;
            3'b001: r610 = r98;
            3'b010: r610 = r98;
            3'b011: r610 = r98;
            3'b100: r610 = 1'b0;
            3'b101: r610 = r98;
            3'b110: r610 = r98;
            3'b111: r610 = r98;
        endcase
        case ({ r642, r641, r640 })
            3'b000: r611 = r99;
            3'b001: r611 = r99;
            3'b010: r611 = r99;
            3'b011: r611 = r99;
            3'b100: r611 = 1'b1;
            3'b101: r611 = r99;
            3'b110: r611 = r99;
            3'b111: r611 = r99;
        endcase
        case ({ r642, r641, r640 })
            3'b000: r612 = r100;
            3'b001: r612 = r100;
            3'b010: r612 = r100;
            3'b011: r612 = r100;
            3'b100: r612 = 1'b0;
            3'b101: r612 = r100;
            3'b110: r612 = r100;
            3'b111: r612 = r100;
        endcase
        case ({ r642, r641, r640 })
            3'b000: r613 = r101;
            3'b001: r613 = r101;
            3'b010: r613 = r101;
            3'b011: r613 = r101;
            3'b100: r613 = 1'b1;
            3'b101: r613 = r101;
            3'b110: r613 = r101;
            3'b111: r613 = r101;
        endcase
        case ({ r642, r641, r640 })
            3'b000: r614 = r102;
            3'b001: r614 = r102;
            3'b010: r614 = r102;
            3'b011: r614 = r102;
            3'b100: r614 = 1'b0;
            3'b101: r614 = r102;
            3'b110: r614 = r102;
            3'b111: r614 = r102;
        endcase
        case ({ r642, r641, r640 })
            3'b000: r615 = r103;
            3'b001: r615 = r103;
            3'b010: r615 = r103;
            3'b011: r615 = r103;
            3'b100: r615 = 1'b0;
            3'b101: r615 = r103;
            3'b110: r615 = r103;
            3'b111: r615 = r103;
        endcase
        case ({ r642, r641, r640 })
            3'b000: r616 = r104;
            3'b001: r616 = r104;
            3'b010: r616 = r104;
            3'b011: r616 = r104;
            3'b100: r616 = r104;
            3'b101: r616 = 1'b0;
            3'b110: r616 = r104;
            3'b111: r616 = r104;
        endcase
        case ({ r642, r641, r640 })
            3'b000: r617 = r105;
            3'b001: r617 = r105;
            3'b010: r617 = r105;
            3'b011: r617 = r105;
            3'b100: r617 = r105;
            3'b101: r617 = 1'b1;
            3'b110: r617 = r105;
            3'b111: r617 = r105;
        endcase
        case ({ r642, r641, r640 })
            3'b000: r618 = r106;
            3'b001: r618 = r106;
            3'b010: r618 = r106;
            3'b011: r618 = r106;
            3'b100: r618 = r106;
            3'b101: r618 = 1'b0;
            3'b110: r618 = r106;
            3'b111: r618 = r106;
        endcase
        case ({ r642, r641, r640 })
            3'b000: r619 = r107;
            3'b001: r619 = r107;
            3'b010: r619 = r107;
            3'b011: r619 = r107;
            3'b100: r619 = r107;
            3'b101: r619 = 1'b1;
            3'b110: r619 = r107;
            3'b111: r619 = r107;
        endcase
        case ({ r642, r641, r640 })
            3'b000: r620 = r108;
            3'b001: r620 = r108;
            3'b010: r620 = r108;
            3'b011: r620 = r108;
            3'b100: r620 = r108;
            3'b101: r620 = 1'b0;
            3'b110: r620 = r108;
            3'b111: r620 = r108;
        endcase
        case ({ r642, r641, r640 })
            3'b000: r621 = r109;
            3'b001: r621 = r109;
            3'b010: r621 = r109;
            3'b011: r621 = r109;
            3'b100: r621 = r109;
            3'b101: r621 = 1'b1;
            3'b110: r621 = r109;
            3'b111: r621 = r109;
        endcase
        case ({ r642, r641, r640 })
            3'b000: r622 = r110;
            3'b001: r622 = r110;
            3'b010: r622 = r110;
            3'b011: r622 = r110;
            3'b100: r622 = r110;
            3'b101: r622 = 1'b0;
            3'b110: r622 = r110;
            3'b111: r622 = r110;
        endcase
        case ({ r642, r641, r640 })
            3'b000: r623 = r111;
            3'b001: r623 = r111;
            3'b010: r623 = r111;
            3'b011: r623 = r111;
            3'b100: r623 = r111;
            3'b101: r623 = 1'b0;
            3'b110: r623 = r111;
            3'b111: r623 = r111;
        endcase
        case ({ r642, r641, r640 })
            3'b000: r624 = r112;
            3'b001: r624 = r112;
            3'b010: r624 = r112;
            3'b011: r624 = r112;
            3'b100: r624 = r112;
            3'b101: r624 = r112;
            3'b110: r624 = 1'b0;
            3'b111: r624 = r112;
        endcase
        case ({ r642, r641, r640 })
            3'b000: r625 = r113;
            3'b001: r625 = r113;
            3'b010: r625 = r113;
            3'b011: r625 = r113;
            3'b100: r625 = r113;
            3'b101: r625 = r113;
            3'b110: r625 = 1'b1;
            3'b111: r625 = r113;
        endcase
        case ({ r642, r641, r640 })
            3'b000: r626 = r114;
            3'b001: r626 = r114;
            3'b010: r626 = r114;
            3'b011: r626 = r114;
            3'b100: r626 = r114;
            3'b101: r626 = r114;
            3'b110: r626 = 1'b0;
            3'b111: r626 = r114;
        endcase
        case ({ r642, r641, r640 })
            3'b000: r627 = r115;
            3'b001: r627 = r115;
            3'b010: r627 = r115;
            3'b011: r627 = r115;
            3'b100: r627 = r115;
            3'b101: r627 = r115;
            3'b110: r627 = 1'b1;
            3'b111: r627 = r115;
        endcase
        case ({ r642, r641, r640 })
            3'b000: r628 = r116;
            3'b001: r628 = r116;
            3'b010: r628 = r116;
            3'b011: r628 = r116;
            3'b100: r628 = r116;
            3'b101: r628 = r116;
            3'b110: r628 = 1'b0;
            3'b111: r628 = r116;
        endcase
        case ({ r642, r641, r640 })
            3'b000: r629 = r117;
            3'b001: r629 = r117;
            3'b010: r629 = r117;
            3'b011: r629 = r117;
            3'b100: r629 = r117;
            3'b101: r629 = r117;
            3'b110: r629 = 1'b1;
            3'b111: r629 = r117;
        endcase
        case ({ r642, r641, r640 })
            3'b000: r630 = r118;
            3'b001: r630 = r118;
            3'b010: r630 = r118;
            3'b011: r630 = r118;
            3'b100: r630 = r118;
            3'b101: r630 = r118;
            3'b110: r630 = 1'b0;
            3'b111: r630 = r118;
        endcase
        case ({ r642, r641, r640 })
            3'b000: r631 = r119;
            3'b001: r631 = r119;
            3'b010: r631 = r119;
            3'b011: r631 = r119;
            3'b100: r631 = r119;
            3'b101: r631 = r119;
            3'b110: r631 = 1'b0;
            3'b111: r631 = r119;
        endcase
        case ({ r642, r641, r640 })
            3'b000: r632 = r120;
            3'b001: r632 = r120;
            3'b010: r632 = r120;
            3'b011: r632 = r120;
            3'b100: r632 = r120;
            3'b101: r632 = r120;
            3'b110: r632 = r120;
            3'b111: r632 = 1'b0;
        endcase
        case ({ r642, r641, r640 })
            3'b000: r633 = r121;
            3'b001: r633 = r121;
            3'b010: r633 = r121;
            3'b011: r633 = r121;
            3'b100: r633 = r121;
            3'b101: r633 = r121;
            3'b110: r633 = r121;
            3'b111: r633 = 1'b1;
        endcase
        case ({ r642, r641, r640 })
            3'b000: r634 = r122;
            3'b001: r634 = r122;
            3'b010: r634 = r122;
            3'b011: r634 = r122;
            3'b100: r634 = r122;
            3'b101: r634 = r122;
            3'b110: r634 = r122;
            3'b111: r634 = 1'b0;
        endcase
        case ({ r642, r641, r640 })
            3'b000: r635 = r123;
            3'b001: r635 = r123;
            3'b010: r635 = r123;
            3'b011: r635 = r123;
            3'b100: r635 = r123;
            3'b101: r635 = r123;
            3'b110: r635 = r123;
            3'b111: r635 = 1'b1;
        endcase
        case ({ r642, r641, r640 })
            3'b000: r636 = r124;
            3'b001: r636 = r124;
            3'b010: r636 = r124;
            3'b011: r636 = r124;
            3'b100: r636 = r124;
            3'b101: r636 = r124;
            3'b110: r636 = r124;
            3'b111: r636 = 1'b0;
        endcase
        case ({ r642, r641, r640 })
            3'b000: r637 = r125;
            3'b001: r637 = r125;
            3'b010: r637 = r125;
            3'b011: r637 = r125;
            3'b100: r637 = r125;
            3'b101: r637 = r125;
            3'b110: r637 = r125;
            3'b111: r637 = 1'b1;
        endcase
        case ({ r642, r641, r640 })
            3'b000: r638 = r126;
            3'b001: r638 = r126;
            3'b010: r638 = r126;
            3'b011: r638 = r126;
            3'b100: r638 = r126;
            3'b101: r638 = r126;
            3'b110: r638 = r126;
            3'b111: r638 = 1'b0;
        endcase
        case ({ r642, r641, r640 })
            3'b000: r639 = r127;
            3'b001: r639 = r127;
            3'b010: r639 = r127;
            3'b011: r639 = r127;
            3'b100: r639 = r127;
            3'b101: r639 = r127;
            3'b110: r639 = r127;
            3'b111: r639 = 1'b0;
        endcase
        out = { r639, r638, r637, r636, r635, r634, r633, r632, r631, r630, r629, r628, r627, r626, r625, r624, r623, r622, r621, r620, r619, r618, r617, r616, r615, r614, r613, r612, r611, r610, r609, r608, r607, r606, r605, r604, r603, r602, r601, r600, r599, r598, r597, r596, r595, r594, r593, r592, r591, r590, r589, r588, r587, r586, r585, r584, 1'b0, 1'b0, 1'b0, 1'b0, 1'b1, 1'b1, 1'b0, 1'b0 };
    end
endmodule
